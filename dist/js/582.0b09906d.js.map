{"version":3,"file":"js/582.0b09906d.js","mappings":"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","sources":["webpack://saltmate-app/./src/components/admin/NFTManagement.vue","webpack://saltmate-app/./src/components/admin/NFTManagement.vue?084b"],"sourcesContent":["<template>\n  <div class=\"management-container\">\n    <h3><i class=\"fas fa-gem\"></i> NFT 관리</h3>\n    <p>\n      사용자의 공장 지분 연동 NFT 보유 현황을 관리하고, 수동으로 발행하거나\n      회수합니다.\n    </p>\n\n    <div class=\"nft-form card\">\n      <h4>NFT 수동 발행</h4>\n      <form @submit.prevent=\"issueNft\">\n        <div class=\"form-group\">\n          <label for=\"userSelect\">대상 사용자 선택</label>\n          <select id=\"userSelect\" v-model=\"selectedUserId\" required>\n            <option disabled value=\"\">NFT를 발행할 사용자를 선택하세요</option>\n            <option\n              v-for=\"user in usersWithoutNft\"\n              :key=\"user.id\"\n              :value=\"user.id\"\n            >\n              {{ user.name }} ({{ user.email }})\n            </option>\n          </select>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">\n          선택한 사용자에게 NFT 발행\n        </button>\n      </form>\n    </div>\n\n    <div class=\"nft-holders-list card\">\n      <h4>NFT 보유자 목록</h4>\n      <div v-if=\"loading\" class=\"loading-spinner\"></div>\n      <table v-else-if=\"nftHolders.length > 0\" class=\"holder-table\">\n        <thead>\n          <tr>\n            <th>보유자 이름</th>\n            <th>이메일</th>\n            <th>지분율</th>\n            <th>관리</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"holder in nftHolders\" :key=\"holder.id\">\n            <td>{{ holder.name }}</td>\n            <td>{{ holder.email }}</td>\n            <td>{{ holder.equityPercentage || 0 }} %</td>\n            <td>\n              <button @click=\"revokeNft(holder)\" class=\"btn btn-sm btn-danger\">\n                NFT 회수\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div v-else class=\"no-data\">NFT를 보유한 사용자가 없습니다.</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from \"vue\";\nimport { db } from \"@/firebaseConfig\";\n// 변경 후\nimport { collection, getDocs, doc, writeBatch } from \"firebase/firestore\";\n\nconst allUsers = ref([]);\nconst loading = ref(true);\nconst selectedUserId = ref(\"\");\n\nconst nftHolders = computed(() => allUsers.value.filter((u) => u.hasNFT));\nconst usersWithoutNft = computed(() => allUsers.value.filter((u) => !u.hasNFT));\n\nconst fetchUsers = async () => {\n  loading.value = true;\n  try {\n    const querySnapshot = await getDocs(collection(db, \"users\"));\n    allUsers.value = querySnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n  } catch (error) {\n    console.error(\"사용자 목록을 불러오는 중 오류 발생:\", error);\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst issueNft = async () => {\n  if (!selectedUserId.value) {\n    alert(\"NFT를 발행할 사용자를 선택해주세요.\");\n    return;\n  }\n  const user = allUsers.value.find((u) => u.id === selectedUserId.value);\n  if (!confirm(`'${user.name}'님에게 NFT를 발행하시겠습니까?`)) return;\n\n  const batch = writeBatch(db);\n  const userRef = doc(db, \"users\", selectedUserId.value);\n  const equityRef = doc(db, \"equity\", selectedUserId.value); // 지분 문서도 함께 생성\n\n  // 1. 사용자 문서 업데이트 (hasNFT: true)\n  batch.update(userRef, { hasNFT: true });\n  // 2. 지분 문서 생성 (기본값 0%)\n  batch.set(equityRef, {\n    userId: user.id,\n    userName: user.name,\n    userEmail: user.email,\n    equityPercentage: 0,\n  });\n\n  try {\n    await batch.commit();\n    alert(\"NFT가 성공적으로 발행되었습니다.\");\n    selectedUserId.value = \"\";\n    await fetchUsers();\n  } catch (error) {\n    console.error(\"NFT 발행 중 오류 발생:\", error);\n  }\n};\n\nconst revokeNft = async (user) => {\n  if (\n    !confirm(\n      `'${user.name}'님의 NFT를 회수하시겠습니까? 이 작업은 해당 사용자의 지분 정보도 함께 삭제합니다.`\n    )\n  )\n    return;\n\n  const batch = writeBatch(db);\n  const userRef = doc(db, \"users\", user.id);\n  const equityRef = doc(db, \"equity\", user.id);\n\n  // 1. 사용자 문서 업데이트 (hasNFT: false)\n  batch.update(userRef, { hasNFT: false });\n  // 2. 지분 문서 삭제\n  batch.delete(equityRef);\n\n  try {\n    await batch.commit();\n    alert(\"NFT가 성공적으로 회수되었습니다.\");\n    await fetchUsers();\n  } catch (error) {\n    console.error(\"NFT 회수 중 오류 발생:\", error);\n  }\n};\n\nonMounted(fetchUsers);\n</script>\n\n<style scoped>\n/* 이전 컴포넌트들과 유사한 스타일 */\n.management-container {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n}\n.card {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n}\nh3,\nh4 {\n  margin-top: 0;\n}\n.nft-form .form-group {\n  margin-bottom: 20px;\n}\n.nft-form label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n}\n.nft-form select {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n.holder-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n.holder-table th,\n.holder-table td {\n  border-bottom: 1px solid #eee;\n  padding: 12px 15px;\n  text-align: left;\n}\n/* ... (버튼, 로딩 스피너 등 공용 스타일) ... */\n</style>\n","import script from \"./NFTManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NFTManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NFTManagement.vue?vue&type=style&index=0&id=708018f8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-708018f8\"]])\n\nexport default __exports__"],"names":["allUsers","ref","loading","selectedUserId","nftHolders","computed","value","filter","u","hasNFT","usersWithoutNft","fetchUsers","async","querySnapshot","getDocs","collection","db","docs","map","doc","id","data","error","console","issueNft","alert","user","find","confirm","name","batch","writeBatch","userRef","equityRef","update","set","userId","userName","userEmail","email","equityPercentage","commit","revokeNft","delete","onMounted","_createElementBlock","_hoisted_1","_createElementVNode","class","_hoisted_2","onSubmit","_withModifiers","_hoisted_3","for","$event","required","disabled","_Fragment","_renderList","key","_toDisplayString","_hoisted_4","type","_hoisted_5","_hoisted_6","length","_hoisted_7","holder","onClick","_hoisted_8","_hoisted_9","__exports__"],"sourceRoot":""}
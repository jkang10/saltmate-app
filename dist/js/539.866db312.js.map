{"version":3,"file":"js/539.866db312.js","mappings":"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","sources":["webpack://saltmate-app/./src/components/admin/EventManagement.vue","webpack://saltmate-app/./src/components/admin/EventManagement.vue?02df"],"sourcesContent":["<template>\n  <div class=\"management-container\">\n    <h3><i class=\"fas fa-calendar-alt\"></i> 이벤트 관리</h3>\n    <p>새로운 이벤트를 생성하고 당첨자를 관리합니다.</p>\n\n    <div class=\"event-form card\">\n      <h4>새 이벤트 생성</h4>\n      <form @submit.prevent=\"createEvent\">\n        <div class=\"form-group\">\n          <label for=\"title\">이벤트 제목</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            v-model=\"newEvent.title\"\n            placeholder=\"이벤트 제목\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"description\">이벤트 설명</label>\n          <textarea\n            id=\"description\"\n            v-model=\"newEvent.description\"\n            rows=\"4\"\n            placeholder=\"이벤트 상세 내용\"\n            required\n          ></textarea>\n        </div>\n        <div class=\"form-group-inline\">\n          <div class=\"form-group\">\n            <label for=\"startDate\">시작일</label>\n            <input\n              type=\"date\"\n              id=\"startDate\"\n              v-model=\"newEvent.startDate\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"endDate\">종료일</label>\n            <input\n              type=\"date\"\n              id=\"endDate\"\n              v-model=\"newEvent.endDate\"\n              required\n            />\n          </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">이벤트 생성</button>\n      </form>\n    </div>\n\n    <div class=\"event-list card\">\n      <h4>이벤트 목록</h4>\n      <div v-if=\"loading\" class=\"loading-spinner\"></div>\n      <table v-else-if=\"events.length > 0\" class=\"event-table\">\n        <thead>\n          <tr>\n            <th>제목</th>\n            <th>기간</th>\n            <th>상태</th>\n            <th>당첨자</th>\n            <th>관리</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"event in events\" :key=\"event.id\">\n            <td>{{ event.title }}</td>\n            <td>\n              {{ formatDate(event.startDate) }} ~\n              {{ formatDate(event.endDate) }}\n            </td>\n            <td>\n              <span :class=\"`status-badge status-${getEventStatus(event)}`\">\n                {{ getEventStatusText(getEventStatus(event)) }}\n              </span>\n            </td>\n            <td>{{ event.winnerName || \"미선정\" }}</td>\n            <td>\n              <button\n                v-if=\"getEventStatus(event) === 'ended' && !event.winnerId\"\n                @click=\"selectWinner(event.id)\"\n                class=\"btn btn-sm btn-success\"\n              >\n                당첨자 선정\n              </button>\n              <button\n                @click=\"deleteEvent(event.id)\"\n                class=\"btn btn-sm btn-danger\"\n              >\n                삭제\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div v-else class=\"no-data\">생성된 이벤트가 없습니다.</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from \"vue\";\nimport { db } from \"@/firebaseConfig\";\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  deleteDoc,\n  doc,\n  updateDoc,\n  Timestamp,\n  orderBy,\n  query,\n} from \"firebase/firestore\";\n\nconst events = ref([]);\nconst loading = ref(true);\nconst newEvent = reactive({\n  title: \"\",\n  description: \"\",\n  startDate: \"\",\n  endDate: \"\",\n});\n\n// --- Helper Functions ---\nconst formatDate = (timestamp) => {\n  if (!timestamp) return \"\";\n  return timestamp.toDate().toLocaleDateString(\"ko-KR\");\n};\n\nconst getEventStatus = (event) => {\n  const now = new Date();\n  const start = event.startDate.toDate();\n  const end = event.endDate.toDate();\n  if (now < start) return \"upcoming\";\n  if (now > end) return \"ended\";\n  return \"ongoing\";\n};\n\nconst getEventStatusText = (status) => {\n  const statusMap = {\n    upcoming: \"진행 예정\",\n    ongoing: \"진행중\",\n    ended: \"종료\",\n  };\n  return statusMap[status] || status;\n};\n\n// --- Firestore Functions ---\nconst fetchEvents = async () => {\n  loading.value = true;\n  try {\n    const eventsRef = collection(db, \"events\");\n    const q = query(eventsRef, orderBy(\"startDate\", \"desc\"));\n    const querySnapshot = await getDocs(q);\n    events.value = querySnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n  } catch (error) {\n    console.error(\"이벤트 목록을 불러오는 중 오류 발생:\", error);\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst createEvent = async () => {\n  if (\n    !newEvent.title ||\n    !newEvent.description ||\n    !newEvent.startDate ||\n    !newEvent.endDate\n  ) {\n    alert(\"모든 필드를 입력해주세요.\");\n    return;\n  }\n  try {\n    await addDoc(collection(db, \"events\"), {\n      ...newEvent,\n      startDate: Timestamp.fromDate(new Date(newEvent.startDate)),\n      endDate: Timestamp.fromDate(new Date(newEvent.endDate)),\n      winnerId: null,\n      winnerName: null,\n    });\n    alert(\"이벤트가 성공적으로 생성되었습니다.\");\n    Object.assign(newEvent, {\n      title: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n    });\n    await fetchEvents();\n  } catch (error) {\n    console.error(\"이벤트 생성 중 오류 발생:\", error);\n  }\n};\n\nconst deleteEvent = async (eventId) => {\n  if (!confirm(\"정말로 이 이벤트를 삭제하시겠습니까?\")) return;\n  try {\n    await deleteDoc(doc(db, \"events\", eventId));\n    alert(\"이벤트가 삭제되었습니다.\");\n    await fetchEvents();\n  } catch (error) {\n    console.error(\"이벤트 삭제 중 오류 발생:\", error);\n  }\n};\n\nconst selectWinner = async (eventId) => {\n  if (!confirm(\"이벤트 당첨자를 무작위로 선정하시겠습니까?\")) return;\n\n  // 실제 운영 환경에서는 이벤트 참여자 목록에서 추첨해야 합니다.\n  // 여기서는 임시로 전체 사용자 중 한 명을 무작위로 선택합니다.\n  try {\n    const usersSnapshot = await getDocs(collection(db, \"users\"));\n    const allUsers = usersSnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n\n    if (allUsers.length === 0) {\n      alert(\"추첨할 사용자가 없습니다.\");\n      return;\n    }\n\n    const winner = allUsers[Math.floor(Math.random() * allUsers.length)];\n\n    const eventRef = doc(db, \"events\", eventId);\n    await updateDoc(eventRef, {\n      winnerId: winner.id,\n      winnerName: winner.name,\n    });\n\n    alert(`당첨자가 선정되었습니다: ${winner.name}`);\n    await fetchEvents();\n  } catch (error) {\n    console.error(\"당첨자 선정 중 오류 발생:\", error);\n    alert(\"당첨자 선정에 실패했습니다.\");\n  }\n};\n\nonMounted(fetchEvents);\n</script>\n\n<style scoped>\n/* 이전 컴포넌트들과 유사한 스타일 */\n.management-container {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n}\n.card {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n}\nh3,\nh4 {\n  margin-top: 0;\n}\n\n/* 이벤트 생성 폼 */\n.event-form .form-group {\n  margin-bottom: 20px;\n}\n.event-form .form-group-inline {\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n.event-form .form-group-inline .form-group {\n  flex: 1;\n  margin-bottom: 0;\n}\n.event-form label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n}\n.event-form input,\n.event-form textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 1em;\n  box-sizing: border-box;\n}\n\n/* 이벤트 목록 테이블 */\n.event-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n.event-table th,\n.event-table td {\n  border-bottom: 1px solid #eee;\n  padding: 12px 15px;\n  text-align: left;\n}\n\n/* 상태 배지 */\n.status-badge {\n  padding: 5px 10px;\n  border-radius: 15px;\n  font-size: 0.8em;\n  font-weight: bold;\n  color: #fff;\n}\n.status-ongoing {\n  background-color: #28a745;\n}\n.status-ended {\n  background-color: #6c757d;\n}\n.status-upcoming {\n  background-color: #17a2b8;\n}\n\n/* 공용 버튼 및 로딩 스타일 */\n.btn {\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-weight: bold;\n}\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n}\n.btn-danger {\n  background-color: #dc3545;\n  color: white;\n}\n.btn-success {\n  background-color: #28a745;\n  color: white;\n}\n.btn-sm {\n  padding: 5px 10px;\n  font-size: 0.85em;\n  margin-right: 5px;\n}\n.loading-spinner,\n.no-data {\n  text-align: center;\n  padding: 50px;\n  color: #777;\n}\n.loading-spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  border-left-color: #007bff;\n  animation: spin 1s ease infinite;\n  margin: 50px auto;\n}\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style>\n","import script from \"./EventManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EventManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EventManagement.vue?vue&type=style&index=0&id=efaa8104&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-efaa8104\"]])\n\nexport default __exports__"],"names":["events","ref","loading","newEvent","reactive","title","description","startDate","endDate","formatDate","timestamp","toDate","toLocaleDateString","getEventStatus","event","now","Date","start","end","getEventStatusText","status","statusMap","upcoming","ongoing","ended","fetchEvents","async","value","eventsRef","collection","db","q","query","orderBy","querySnapshot","getDocs","docs","map","doc","id","data","error","console","createEvent","addDoc","Timestamp","fromDate","winnerId","winnerName","alert","Object","assign","deleteEvent","confirm","deleteDoc","eventId","selectWinner","usersSnapshot","allUsers","length","winner","Math","floor","random","eventRef","updateDoc","name","onMounted","_createElementBlock","_hoisted_1","_createElementVNode","class","_hoisted_2","onSubmit","_withModifiers","_hoisted_3","for","type","$event","placeholder","required","_hoisted_4","rows","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","key","_toDisplayString","_normalizeClass","onClick","_hoisted_11","_hoisted_12","_hoisted_13","__exports__"],"sourceRoot":""}
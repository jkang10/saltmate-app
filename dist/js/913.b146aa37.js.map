{"version":3,"file":"js/913.b146aa37.js","mappings":"2hBAqFA,MAAMA,GAAQC,EAAAA,EAAAA,IAAI,IACZC,GAAUD,EAAAA,EAAAA,KAAI,GACdE,GAAYC,EAAAA,EAAAA,IAAS,CACzBC,MAAO,GACPC,QAAS,KAILC,EAAcC,GACbA,EACEA,EAAUC,SAASC,mBAAmB,SADtB,GAKnBC,EAAaC,UACjBV,EAAQW,OAAQ,EAChB,IACE,MAAMC,GAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,SAC1BC,GAAIC,EAAAA,EAAAA,GAAMJ,GAAUK,EAAAA,EAAAA,IAAQ,YAAa,SACzCC,QAAsBC,EAAAA,EAAAA,IAAQJ,GACpCjB,EAAMa,MAAQO,EAAcE,KAAKC,IAAKC,IAAG,CACvCC,GAAID,EAAIC,MACLD,EAAIE,SAEX,CAAE,MAAOC,GACPC,QAAQD,MAAM,qBAAsBA,GACpCE,MAAM,sBACR,CAAE,QACA3B,EAAQW,OAAQ,CAClB,GAGIiB,EAAelB,UACnB,GAAKT,EAAUE,MAAM0B,QAAW5B,EAAUG,QAAQyB,OAKlD,UACQC,EAAAA,EAAAA,KAAOjB,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,SAAU,CACpCX,MAAOF,EAAUE,MACjBC,QAASH,EAAUG,QACnB2B,SAAUC,EAAAA,GAAKC,YAAYC,IAC3BC,WAAY,MACZC,KAAM,SACNC,WAAWC,EAAAA,EAAAA,QAGbX,MAAM,wBACN1B,EAAUE,MAAQ,GAClBF,EAAUG,QAAU,SACdK,GACR,CAAE,MAAOgB,GACPC,QAAQD,MAAM,mBAAoBA,GAClCE,MAAM,mBACR,MArBEA,MAAM,uBAwBJY,EAAa7B,UACjB,MAAM8B,EAAeC,QAAQ,wBAC7B,GAAKD,EAEL,UACQE,EAAAA,EAAAA,KAAUpB,EAAAA,EAAAA,IAAIR,EAAAA,GAAI,QAAS6B,IACjChB,MAAM,6BACAlB,GACR,CAAE,MAAOgB,GACPC,QAAQD,MAAM,kBAAmBA,GACjCE,MAAM,kBACR,G,OAGFiB,EAAAA,EAAAA,IAAUnC,G,oBA5JRoC,EAAAA,EAAAA,IAmEM,MAnENC,EAmEM,C,aAlEJC,EAAAA,EAAAA,IAAuD,YAAnDA,EAAAA,EAAAA,IAA+B,KAA5BC,MAAM,qB,QAAsB,qB,iBACnCD,EAAAA,EAAAA,IAAkC,SAA/B,+BAA2B,KAE9BA,EAAAA,EAAAA,IAyBM,MAzBNE,EAyBM,C,aAxBJF,EAAAA,EAAAA,IAAkB,UAAd,aAAS,KACbA,EAAAA,EAAAA,IAsBO,QAtBAG,UAAMC,EAAAA,EAAAA,IAAUvB,EAAY,c,EACjCmB,EAAAA,EAAAA,IASM,MATNK,EASM,C,aARJL,EAAAA,EAAAA,IAA6B,SAAtBM,IAAI,SAAQ,MAAE,K,SACrBN,EAAAA,EAAAA,IAME,SALAX,KAAK,OACLb,GAAG,Q,qCACMtB,EAAUE,MAAKmD,GACxBC,YAAY,iBACZC,SAAA,I,iBAFSvD,EAAUE,YAKvB4C,EAAAA,EAAAA,IASM,MATNU,EASM,C,aARJV,EAAAA,EAAAA,IAA+B,SAAxBM,IAAI,WAAU,MAAE,K,SACvBN,EAAAA,EAAAA,IAMY,YALVxB,GAAG,U,qCACMtB,EAAUG,QAAOkD,GAC1BI,KAAK,IACLH,YAAY,iBACZC,SAAA,I,iBAHSvD,EAAUG,a,aAMvB2C,EAAAA,EAAAA,IAA8D,UAAtDX,KAAK,SAASY,MAAM,mBAAkB,WAAO,K,OAIzDD,EAAAA,EAAAA,IAmCM,MAnCNY,EAmCM,C,aAlCJZ,EAAAA,EAAAA,IAAe,UAAX,UAAM,IACC/C,EAAAW,Q,WAAXkC,EAAAA,EAAAA,IAAkD,MAAlDe,IACkB9D,EAAAa,MAAMkD,OAAS,I,WAAjChB,EAAAA,EAAAA,IA8BQ,QA9BRiB,EA8BQ,C,aA7BNf,EAAAA,EAAAA,IAQQ,eAPNA,EAAAA,EAAAA,IAMK,YALHA,EAAAA,EAAAA,IAAW,UAAP,OACJA,EAAAA,EAAAA,IAAW,UAAP,OACJA,EAAAA,EAAAA,IAAY,UAAR,QACJA,EAAAA,EAAAA,IAAY,UAAR,QACJA,EAAAA,EAAAA,IAAW,UAAP,U,KAGRA,EAAAA,EAAAA,IAmBQ,gB,aAlBNF,EAAAA,EAAAA,IAiBKkB,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAjBclE,EAAAa,MAARsD,K,WAAXpB,EAAAA,EAAAA,IAiBK,MAjBsBqB,IAAKD,EAAK1C,I,EACnCwB,EAAAA,EAAAA,IAIK,YAHHA,EAAAA,EAAAA,IAES,QAFFC,OAAKmB,EAAAA,EAAAA,IAAA,mBAAqBF,EAAK7B,MAAQ,e,QAC9B,WAAd6B,EAAK7B,KAAoB,KAAO,QAAvB,MAGbW,EAAAA,EAAAA,IAAyB,WAAAqB,EAAAA,EAAAA,IAAlBH,EAAK9D,OAAK,IACjB4C,EAAAA,EAAAA,IAAuC,WAAAqB,EAAAA,EAAAA,IAAhCH,EAAK9B,YAAc,OAAJ,IACtBY,EAAAA,EAAAA,IAAyC,WAAAqB,EAAAA,EAAAA,IAAlC/D,EAAW4D,EAAK5B,YAAS,IAChCU,EAAAA,EAAAA,IAOK,YANHA,EAAAA,EAAAA,IAKS,UAJNsB,QAAKf,GAAEf,EAAW0B,EAAK1C,IACxByB,MAAM,yBACP,OAED,EAAAsB,S,wBAKRzB,EAAAA,EAAAA,IAAgD,MAAhD0B,EAA4B,uB,aC5DlC,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://saltmate-app/./src/components/admin/NoticesCommunityManagement.vue","webpack://saltmate-app/./src/components/admin/NoticesCommunityManagement.vue?13b8"],"sourcesContent":["<template>\n  <div class=\"management-container\">\n    <h3><i class=\"fas fa-bullhorn\"></i> 공지사항 및 커뮤니티 관리</h3>\n    <p>새로운 공지사항을 작성하거나 게시글을 관리합니다.</p>\n\n    <div class=\"notice-form card\">\n      <h4>새 공지사항 작성</h4>\n      <form @submit.prevent=\"createNotice\">\n        <div class=\"form-group\">\n          <label for=\"title\">제목</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            v-model=\"newNotice.title\"\n            placeholder=\"공지사항 제목을 입력하세요\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"content\">내용</label>\n          <textarea\n            id=\"content\"\n            v-model=\"newNotice.content\"\n            rows=\"5\"\n            placeholder=\"공지사항 내용을 입력하세요\"\n            required\n          ></textarea>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">공지사항 등록</button>\n      </form>\n    </div>\n\n    <div class=\"post-list card\">\n      <h4>게시글 목록</h4>\n      <div v-if=\"loading\" class=\"loading-spinner\"></div>\n      <table v-else-if=\"posts.length > 0\" class=\"post-table\">\n        <thead>\n          <tr>\n            <th>유형</th>\n            <th>제목</th>\n            <th>작성자</th>\n            <th>작성일</th>\n            <th>관리</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"post in posts\" :key=\"post.id\">\n            <td>\n              <span :class=\"`type-badge type-${post.type || 'default'}`\">{{\n                post.type === \"notice\" ? \"공지\" : \"커뮤니티\"\n              }}</span>\n            </td>\n            <td>{{ post.title }}</td>\n            <td>{{ post.authorName || \"시스템\" }}</td>\n            <td>{{ formatDate(post.createdAt) }}</td>\n            <td>\n              <button\n                @click=\"deletePost(post.id)\"\n                class=\"btn btn-sm btn-danger\"\n              >\n                삭제\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div v-else class=\"no-data\">작성된 게시글이 없습니다.</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from \"vue\";\nimport { db, auth } from \"@/firebaseConfig\";\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  deleteDoc,\n  doc,\n  serverTimestamp,\n  orderBy,\n  query,\n} from \"firebase/firestore\";\n\nconst posts = ref([]);\nconst loading = ref(true);\nconst newNotice = reactive({\n  title: \"\",\n  content: \"\",\n});\n\n// --- Helper Functions ---\nconst formatDate = (timestamp) => {\n  if (!timestamp) return \"\";\n  return timestamp.toDate().toLocaleDateString(\"ko-KR\");\n};\n\n// --- Firestore Functions ---\nconst fetchPosts = async () => {\n  loading.value = true;\n  try {\n    const postsRef = collection(db, \"posts\");\n    const q = query(postsRef, orderBy(\"createdAt\", \"desc\"));\n    const querySnapshot = await getDocs(q);\n    posts.value = querySnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n  } catch (error) {\n    console.error(\"게시글을 불러오는 중 오류 발생:\", error);\n    alert(\"게시글을 불러오는 데 실패했습니다.\");\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst createNotice = async () => {\n  if (!newNotice.title.trim() || !newNotice.content.trim()) {\n    alert(\"제목과 내용을 모두 입력해주세요.\");\n    return;\n  }\n\n  try {\n    await addDoc(collection(db, \"posts\"), {\n      title: newNotice.title,\n      content: newNotice.content,\n      authorId: auth.currentUser.uid,\n      authorName: \"관리자\", // 현재 로그인한 관리자 이름으로 설정 가능\n      type: \"notice\", // 관리자가 작성하는 글은 'notice' 타입으로 지정\n      createdAt: serverTimestamp(),\n    });\n\n    alert(\"공지사항이 성공적으로 등록되었습니다.\");\n    newNotice.title = \"\";\n    newNotice.content = \"\";\n    await fetchPosts(); // 목록 새로고침\n  } catch (error) {\n    console.error(\"공지사항 등록 중 오류 발생:\", error);\n    alert(\"공지사항 등록에 실패했습니다.\");\n  }\n};\n\nconst deletePost = async (postId) => {\n  const confirmation = confirm(\"정말로 이 게시글을 삭제하시겠습니까?\");\n  if (!confirmation) return;\n\n  try {\n    await deleteDoc(doc(db, \"posts\", postId));\n    alert(\"게시글이 성공적으로 삭제되었습니다.\");\n    await fetchPosts(); // 목록 새로고침\n  } catch (error) {\n    console.error(\"게시글 삭제 중 오류 발생:\", error);\n    alert(\"게시글 삭제에 실패했습니다.\");\n  }\n};\n\nonMounted(fetchPosts);\n</script>\n\n<style scoped>\n.management-container {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n}\n.card {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n}\nh3,\nh4 {\n  margin-top: 0;\n}\n\n/* 공지사항 작성 폼 */\n.notice-form .form-group {\n  margin-bottom: 20px;\n}\n.notice-form label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: 600;\n}\n.notice-form input,\n.notice-form textarea {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 1em;\n  box-sizing: border-box;\n}\n.notice-form textarea {\n  resize: vertical;\n}\n\n/* 게시글 목록 테이블 */\n.post-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n.post-table th,\n.post-table td {\n  border-bottom: 1px solid #eee;\n  padding: 12px 15px;\n  text-align: left;\n}\n.post-table th {\n  background-color: #f8f9fa;\n}\n\n/* 타입 배지 */\n.type-badge {\n  padding: 4px 8px;\n  border-radius: 5px;\n  font-size: 0.8em;\n  font-weight: bold;\n  color: #fff;\n  text-transform: uppercase;\n}\n.type-notice {\n  background-color: #17a2b8; /* 청록색 */\n}\n.type-community,\n.type-default {\n  background-color: #6c757d; /* 회색 */\n}\n\n/* 공용 버튼 및 로딩 스타일 */\n.btn {\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.3s;\n}\n.btn-primary {\n  background-color: #007bff;\n  color: white;\n}\n.btn-primary:hover {\n  background-color: #0056b3;\n}\n.btn-danger {\n  background-color: #dc3545;\n  color: white;\n}\n.btn-sm {\n  padding: 5px 10px;\n  font-size: 0.85em;\n}\n.loading-spinner,\n.no-data {\n  text-align: center;\n  padding: 50px;\n  color: #777;\n}\n.loading-spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  border-left-color: #007bff;\n  animation: spin 1s ease infinite;\n  margin: 50px auto;\n}\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style>\n","import script from \"./NoticesCommunityManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NoticesCommunityManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NoticesCommunityManagement.vue?vue&type=style&index=0&id=6d5acdcc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6d5acdcc\"]])\n\nexport default __exports__"],"names":["posts","ref","loading","newNotice","reactive","title","content","formatDate","timestamp","toDate","toLocaleDateString","fetchPosts","async","value","postsRef","collection","db","q","query","orderBy","querySnapshot","getDocs","docs","map","doc","id","data","error","console","alert","createNotice","trim","addDoc","authorId","auth","currentUser","uid","authorName","type","createdAt","serverTimestamp","deletePost","confirmation","confirm","deleteDoc","postId","onMounted","_createElementBlock","_hoisted_1","_createElementVNode","class","_hoisted_2","onSubmit","_withModifiers","_hoisted_3","for","$event","placeholder","required","_hoisted_4","rows","_hoisted_5","_hoisted_6","length","_hoisted_7","_Fragment","_renderList","post","key","_normalizeClass","_toDisplayString","onClick","_hoisted_8","_hoisted_9","__exports__"],"sourceRoot":""}